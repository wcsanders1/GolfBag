@model CourseViewModel

<form novalidate class="writable-scorecard scorecard-form" method="post" asp-antiforgery="true"
      asp-action="SaveCourseChanges" asp-controller="RoundOfGolf">
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m => m.NumberOfTeeBoxes)
    @Html.HiddenFor(m => m.NumberOfHoles)
  
    <div class="field">
        <label class="field-label" asp-for="CourseName">Course Name</label>
        <input class="field-input course-name element-to-validate" asp-for="CourseName" placeholder="Course Name" />
        @Html.ValidationMessageFor(m => m.CourseName, null, new { style = "display: none" })
    </div>
    

    <div class="table-responsive">
        <table id="front-nine-table" class="table table-bordered table-striped scorecard">
            <tbody>
                <tr>
                    <td>Hole</td>
                    @for (int i = 0; i < 9; i++)
                    {
                        string holeNumber = (i + 1).ToString();
                        <td>@holeNumber</td>
                    }
                </tr>
                <tr>
                    <td>Par</td>
                    @for (int i = 0; i < 9; i++)
                    {
                        int holeNumber = i + 1;
                        <td>
                            <input class="number-input par element-to-validate" data-hole-number="@holeNumber" asp-for="Pars[i]" />
                            @Html.ValidationMessageFor(m => m.Pars[i], null, new { style = "display: none" })
                        </td>
                    }
                </tr>

                <tr>
                    <td>Handicap</td>
                    @for (int i = 0; i < 9; i++)
                    {
                        int holeNumber = i + 1;
                        <td>
                            <input class="number-input handicap element-to-validate" data-hole-number="@holeNumber" asp-for="Handicaps[i]" />
                            @Html.ValidationMessageFor(m => m.Handicaps[i], null, new { style = "display: none" })
                        </td>
                    }
                </tr>

                @for (int i = 0; i < Model.TeeBoxes.Count; i++)
                {
                    @Html.HiddenFor(m => m.TeeBoxes[i].Id)

                    <tr class="teebox-row" data-teebox-id="@Model.TeeBoxes[i].Id" data-teebox-name="@Model.TeeBoxes[i].Name">
                        <td>
                            <input class="teebox-name teebox-name-input element-to-validate" asp-for="TeeBoxes[i].Name" data-teebox-number="@i" />
                            @Html.ValidationMessageFor(m => m.TeeBoxes[i].Name, null, new { style = "display: none" })
                            <i class="fa fa-trash delete-teebox" data-toggle="tooltip"
                               title="Delete @Model.TeeBoxes[i].Name Teebox"></i>
                            <span class="undo-delete hidden">Undo Delete <i class="fa fa-undo"></i></span>
                        </td>

                        @for (int x = 0; x < 9; x++)
                        {
                            int holeNumber = x + 1;
                            <td class="number-input">
                                <input class="number-input teebox element-to-validate" data-hole-number="@holeNumber" asp-for="TeeBoxes[i].Tees[x].Yardage" />
                                @Html.ValidationMessageFor(m => m.TeeBoxes[i].Tees[x].Yardage, null, new { style = "display: none" })
                            </td>
                        }
                    </tr>
                }

                @for (int i = 0; i < Model.NewTeeBoxes.Count; i++)
                {
                    <tr class="new-teebox-row hidden" data-new-teebox-num="@i">
                        <td>
                            <input class="teebox-name new-teebox-name-input element-to-validate" asp-for="NewTeeBoxes[i].Name" data-new-teebox-num="@i" />
                            @Html.ValidationMessageFor(m => m.NewTeeBoxes[i].Name, null, new { style = "display: none" })
                        </td>

                        @for (int x = 0; x < 9; x++)
                        {
                            int holeNumber = x + 1;
                            <td class="number-input">
                                <input class="number-input teebox element-to-validate" data-hole-number="@holeNumber" asp-for="NewTeeBoxes[i].Tees[x].Yardage" />
                                @Html.ValidationMessageFor(m => m.NewTeeBoxes[i].Tees[x].Yardage, null, new { style = "display: none" })
                            </td>
                        }
                    </tr>
                }
            </tbody>

        </table>
    </div>
    @if (Model.NumberOfHoles == 18)
    {
        <div class="table-responsive">
            <table id="back-nine-table" class="table table-bordered table-striped scorecard">
                <tbody>
                    <tr>
                        <td>Hole</td>
                        @for (int i = 9; i < 18; i++)
                        {
                            string holeNumber = (i + 1).ToString();
                            <td>@holeNumber</td>
                        }
                    </tr>
                    <tr>
                        <td>Par</td>
                        @for (int i = 9; i < 18; i++)
                        {
                            int holeNumber = i + 1;
                            <td>
                                <input class="number-input par element-to-validate" data-hole-number="@holeNumber" asp-for="Pars[i]" />
                                @Html.ValidationMessageFor(m => m.Pars[i], null, new { style = "display: none" })
                            </td>
                        }
                    </tr>

                    <tr>
                        <td>Handicap</td>
                        @for (int i = 9; i < 18; i++)
                        {
                            int holeNumber = i + 1;
                            <td>
                                <input class="number-input handicap element-to-validate" data-hole-number="@holeNumber" asp-for="Handicaps[i]" />
                                @Html.ValidationMessageFor(m => m.Handicaps[i], null, new { style = "display: none" })
                            </td>
                        }
                    </tr>

                    @for (int i = 0; i < Model.TeeBoxes.Count; i++)
                    {
                        <tr class="teebox-row" data-teebox-id="@Model.TeeBoxes[i].Id">
                            <td><p class="teebox-name-label@(i)">@Model.TeeBoxes[i].Name</p></td>
                            @for (int x = 9; x < 18; x++)
                            {
                                int holeNumber = x + 1;
                                <td class="number-input">
                                    <input class="number-input teebox element-to-validate" data-hole-number="@holeNumber" asp-for="TeeBoxes[i].Tees[x].Yardage" />
                                    @Html.ValidationMessageFor(m => m.TeeBoxes[i].Tees[x].Yardage, null, new { style = "display: none" })
                                </td>
                            }
                        </tr>
                    }
                    @for (int i = 0; i < Model.NewTeeBoxes.Count; i++)
                    {
                        <tr class="new-teebox-row hidden" data-new-teebox-num="@i">
                            <td>
                                <p class="new-teebox-name-label@(i)"></p>
                            </td>

                            @for (int x = 9; x < 18; x++)
                            {
                                int holeNumber = x + 1;
                                <td class="number-input">
                                    <input class="number-input teebox element-to-validate" data-hole-number="@holeNumber" asp-for="NewTeeBoxes[i].Tees[x].Yardage" />
                                    @Html.ValidationMessageFor(m => m.NewTeeBoxes[i].Tees[x].Yardage, null, new { style = "display: none" })
                                </td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    @{
        for (int i = 0; i < Model.TeeBoxes.Count; i++)
        {
            @Html.HiddenFor(m => m.ListOfDeletedTeeBoxes[i], new { @class = "deleted-teebox-input" });
        }
    }

    <div class="table-responsive course-slope-rating-table" id="course-slope-rating-table">
        <table class="table table-bordered table-striped scorecard">
            <tbody>
                <tr>
                    <td>Teebox</td>
                    <td>Course Rating</td>
                    <td>Slope Rating</td>
                </tr>

                @for (int i = 0; i < Model.TeeBoxes.Count; i++)
                {
                    <tr class="course-slope-input teebox-row" data-teebox-id="@Model.TeeBoxes[i].Id">
                        <td class="teebox-name-label@(i)">
                            <p>@Model.TeeBoxes[i].Name</p>
                        </td>
                        <td class="number-input">
                            <input class="number-input course-slope-input-box course-rating element-to-validate" asp-for="TeeBoxes[i].CourseRating" />
                            @Html.ValidationMessageFor(m => m.TeeBoxes[i].CourseRating, null, new { style = "display: none" })
                        </td>
                        <td class="number-input">
                            <input class="number-input course-slope-input-box slope-rating element-to-validate" asp-for="TeeBoxes[i].SlopeRating" />
                            @Html.ValidationMessageFor(m => m.TeeBoxes[i].SlopeRating, null, new { style = "display: none" })
                        </td>
                    </tr>
                }

                @for (int i = 0; i < Model.NewTeeBoxes.Count; i++)
                {
                    <tr class="course-slope-input new-teebox-row hidden" data-new-teebox-num="@i">
                        <td>
                            <p class="new-teebox-name-label@(i)"></p>
                        </td>
                        <td class="number-input">
                            <input class="number-input course-slope-input-box course-rating element-to-validate" masp-for="NewTeeBoxes[i].CourseRating" value="0.0" />
                            @Html.ValidationMessageFor(m => m.NewTeeBoxes[i].CourseRating, null, new { style = "display: none" })
                        </td>
                        <td class="number-input">
                            <input class="number-input course-slope-input-box slope-rating element-to-validate" asp-for="NewTeeBoxes[i].SlopeRating" />
                            @Html.ValidationMessageFor(m => m.NewTeeBoxes[i].SlopeRating, null, new { style = "display: none" })
                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>

    @if (Model.NewTeeBoxes.Count > 0)
    {
        <div class="btn-group">
            <a class="btn btn-default" id="add-teebox-btn">Add Teebox</a>
            <a class="btn btn-default disabled" id="remove-new-teebox">Remove New Teebox</a>
        </div>
    }

    <div class="btn-group">
        <button class="btn btn-success custom-submit" type="button">Save Changes</button>
        <a id="delete-course-button" class="btn btn-danger" data-course-id="@Model.Id" data-course-name="@Model.CourseName">Delete Course</a>
        <a class="btn btn-default" asp-controller="RoundOfGolf" asp-action="EditCourses">Cancel</a>
    </div>
</form>

<div class="error-container"></div>

<div class="modal fade" id="delete-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <p id="modal-header-p" class="warning"></p>
                <a href="#" class="close" data-dismiss="modal">&times;</a>
            </div>
            <div class="modal-body">
                <h1 id="modal-body-h1"></h1>
                <div id="dates-played"></div>
                <h2 id="modal-body-h2"></h2>
            </div>
            <div class="modal-footer">
                <a id="delete-confirm-button" class="btn btn-warning hidden"
                   asp-action="DeleteCourse" asp-controller="RoundOfGolf" asp-route-courseId="@Model.Id">Delete Course</a>
                <button id="cancel-button" class="btn btn-success" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript" src="~/js/FloatingLabels.js"></script>