@model RoundOfGolfViewModel

<h1>@Model.CourseName</h1>

@if (Model.NumberOfHoles == 9)
{
    <form novalidate class="writable-scorecard" method="post" asp-antiforgery="true"
          asp-action="EnterScore" asp-controller="RoundOfGolf"
          asp-route-courseName="@Model.CourseName">
        @Html.HiddenFor(m => m.IdOfCourse)
        <label for="date-of-round-input">Date of Round</label>
        <input id="date-of-round-input" asp-for="DateOfRound" value="@Model.CurrentDate"
               type="text" readonly class="datepicker" />
        <label for="id-of-tee-box-played">Select Tee Box Played</label>
        <select class="teebox-selector" asp-for="IdOfTeeBoxPlayed">
            @for (int i = 0; i < Model.TeeBoxes.Count; i++)
            {
                if (i == 0)
                {
                    <option selected="selected" value="@Model.TeeBoxes[i].Id">@Model.TeeBoxes[i].Name</option>
                }
                else
                {
                    <option value="@Model.TeeBoxes[i].Id">@Model.TeeBoxes[i].Name</option>
                }
            }
        </select>

        <div class="table-responsive">
            <table class="table table-bordered table-striped scorecard">
                <tbody>
                    <tr>
                        <td>Hole</td>
                        @for (int i = 0; i < Model.NumberOfHoles; i++)
                        {
                            string holeNumber = (i + 1).ToString();
                            <td>@holeNumber</td>
                        }
                    </tr>
                    <tr>
                        <td>Par</td>
                        @foreach (var par in Model.Pars)
                        {
                            <td>@par</td>
                        }
                    </tr>
                    <tr>
                        <td>Handicap</td>
                        @foreach (var handicap in Model.Handicaps)
                        {
                            <td>@handicap</td>
                        }
                    </tr>
                    @for (int i = 0; i < Model.TeeBoxes.Count; i++)
                    {
                        if (i == 0)
                        {
                            <tr class="teebox-played" data-teebox-id="@Model.TeeBoxes[i].Id">
                                <td class="teebox-played">@Model.TeeBoxes[i].Name</td>
                                @foreach (var tee in Model.TeeBoxes[i].Tees)
                                {
                                    <td class="teebox-played">@tee.Yardage</td>
                                }
                            </tr>

                        }
                        else
                        {
                            <tr data-teebox-id="@Model.TeeBoxes[i].Id">
                                <td>@Model.TeeBoxes[i].Name</td>
                                @foreach (var tee in Model.TeeBoxes[i].Tees)
                                {
                                    <td>@tee.Yardage</td>
                                }
                            </tr>
                        }
                    }
                    <tr>
                        <td>Enter Scores</td>
                        @for (int i = 0; i < 9; i++)
                        {
                            int holeNumber = i + 1;
                            <td>
                                <input class="number-input score" data-hole-number="@holeNumber" asp-for="FrontNineScores[i]" />
                                @Html.ValidationMessageFor(m => m.FrontNineScores[i], null, new { style = "display: none" })
                            </td>
                        }
                    </tr>
                </tbody>

            </table>
        </div>
        <label for="comment-input-2">Enter Comment</label>
        <textarea asp-for="@Model.Comment" class="well comment-box"></textarea>
        <div class="btn-group">
            <button class="btn btn-success custom-submit" type="button">Save Round</button>
            @*<input id="nine-hole-submit" class="btn btn-success" type="submit" value="Save Round" />*@
            <a class="btn btn-default" asp-action="EnterScore" asp-controller="RoundOfGolf">Cancel</a>
        </div>
    </form>
}
else
{
    <form novalidate class="writable-scorecard" method="post" asp-antiforgery="true"
          asp-action="EnterScore" asp-controller="RoundOfGolf"
          asp-route-courseName="@Model.CourseName">
        <label for="date-of-round-input-2">Date of Round</label>
        <input id="date-of-round-input-2" asp-for="DateOfRound"
               type="text" readonly class="datepicker" value="@Model.CurrentDate" />

        <label for="id-of-tee-box-played">Select Tee Box Played</label>
        <select class="teebox-selector" asp-for="IdOfTeeBoxPlayed">
            @for (int i = 0; i < Model.TeeBoxes.Count; i++)
            {
                if (i == 0)
                {
                    <option selected="selected" value="@Model.TeeBoxes[i].Id">@Model.TeeBoxes[i].Name</option>
                }
                else
                {
                    <option value="@Model.TeeBoxes[i].Id">@Model.TeeBoxes[i].Name</option>
                }
            }
        </select>

        <div id="front-nine">
            @Html.Partial("_FrontNineEnterScore", Model)
        </div>
        <div id="back-nine">
            @Html.Partial("_BackNineEnterScore", Model)
        </div>
        <label for="comment-input-2">Enter Comment</label>
        <textarea asp-for="@Model.Comment" class="well comment-box"></textarea>
        <div class="btn-group">
            <button class="btn btn-success custom-submit" type="button">Save Round</button>
            @*<input class="btn btn-success" type="submit" value="Save Round" />*@
            <a class="btn btn-default" asp-action="EnterScore" asp-controller="RoundOfGolf">Cancel</a>
        </div>
    </form>

    <div id="checkbox-container btn-group btn-group-sm">
        <label class="btn btn-success">
            <input type="checkbox" id="front-nine-checkbox" value="true"
                   data-nine="front" data-action="@Url.Action("DisplayFrontNineEnterScore", Model)"
                   data-target="#front-nine" checked />
        </label>
        <label>Played the front nine.</label><br>
        <label class="btn btn-success">
            <input type="checkbox" id="back-nine-checkbox" value="true"
                   data-nine="back" data-action="@Url.Action("DisplayBackNineEnterScore", Model)"
                   data-target="#back-nine" checked />
        </label>
        <label for="back-nine-checkbox">Played the back nine.</label>
    </div>
}